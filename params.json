{"name":"Pwrake","tagline":"Parallel workflow extension for Rake","body":"# Pwrake\r\n\r\nParallel workflow extension for Rake\r\n* Author: Masahiro Tanaka\r\n\r\n## Features\r\n\r\n* Parallelize all tasks; no need to modify Rakefile, no need to use `multitask`.\r\n* Tasks are executed in the given number of worker threads.\r\n* Remote exuecution using SSH.\r\n* Locality-aware node-selection for Gfarm file system.\r\n\r\n## Installation\r\n\r\nDownload source tgz/zip and expand, cd to subdir and install:\r\n\r\n    $ ruby setup.rb\r\n\r\nOr, gem install:\r\n\r\n    $ gem install pwrake\r\n\r\n## Usage\r\n\r\n### Parallel execution using 4 cores at localhost:\r\n\r\n    $ pwrake -j 4\r\n\r\n### Parallel execution using all cores at localhost:\r\n\r\n    $ pwrake -j\r\n\r\n### Parallel execution using total 2*2 cores at remote 2 hosts:\r\n\r\n1. Share your directory among remote hosts via distributed file system such as NFS, Gfarm.\r\n2. Allow passphrase-less access via SSH in either way:\r\n   * Add passphrase-less key generated by `ssh-keygen`.  (Be careful)\r\n   * Add passphrase using `ssh-add`.\r\n3. Make `hosts` file in which remote host names and the number of cores are listed:\r\n\r\n        $ cat hosts\r\n        host1 2\r\n        host2 2\r\n\r\n4. Run `pwrake` with an option `--hostfile` or `-F`:\r\n\r\n        $ pwrake --hostfile=hosts\r\n\r\n## Tested Platform\r\n\r\n* Ruby 1.9.3, 2.0.0-preview1\r\n* Rake 0.9.2.2\r\n* Fedora 16 / Debian 5.0.7\r\n\r\n## Workflow demo\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}